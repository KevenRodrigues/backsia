import Sequelize, { Model } from 'sequelize';

export default sequelize =>
    class Convenio extends Model {
        static init() {
            super.init(
                {
                    entrega_id: Sequelize.INTEGER,
                    envio_id: Sequelize.INTEGER,
                    codigo: Sequelize.STRING,
                    razao: Sequelize.STRING,
                    fantasia: Sequelize.STRING,
                    cgc_cpf: Sequelize.STRING,
                    ie: Sequelize.STRING,
                    obs: Sequelize.STRING,
                    status: Sequelize.INTEGER,
                    idopera_ultacao: Sequelize.NUMBER,
                    fone: Sequelize.STRING,
                    fone2: Sequelize.STRING,
                    ramal: Sequelize.STRING,
                    fax: Sequelize.STRING,
                    endereco: Sequelize.STRING,
                    bairro: Sequelize.STRING,
                    cidade: Sequelize.STRING,
                    uf: Sequelize.STRING,
                    cep: Sequelize.STRING,
                    email: Sequelize.STRING,
                    site: Sequelize.STRING,
                    ruabol: Sequelize.STRING,
                    ruanot: Sequelize.STRING,
                    ruaout: Sequelize.STRING,
                    bairrobol: Sequelize.STRING,
                    bairronot: Sequelize.STRING,
                    bairroout: Sequelize.STRING,
                    ufbol: Sequelize.STRING,
                    ufnot: Sequelize.STRING,
                    ufout: Sequelize.STRING,
                    cidadebol: Sequelize.STRING,
                    cidadenot: Sequelize.STRING,
                    cidadeout: Sequelize.STRING,
                    cepbol: Sequelize.STRING,
                    cepnot: Sequelize.STRING,
                    cepout: Sequelize.STRING,
                    contrato: Sequelize.STRING,
                    validade: Sequelize.DATE,
                    diapgto: Sequelize.NUMBER,
                    valorcontr: Sequelize.NUMBER,
                    informa: Sequelize.TEXT,
                    motivo: Sequelize.STRING,
                    senha: Sequelize.NUMBER,
                    limite: Sequelize.NUMBER,
                    requisicao: Sequelize.NUMBER,
                    guia: Sequelize.NUMBER,
                    comprova: Sequelize.NUMBER,
                    matricula: Sequelize.NUMBER,
                    controle: Sequelize.STRING,
                    infcid: Sequelize.NUMBER,
                    modulo: Sequelize.STRING,
                    locconve: Sequelize.NUMBER,
                    tipopg: Sequelize.STRING,
                    tiposub: Sequelize.STRING,
                    tiposub2: Sequelize.STRING,
                    tiposub3: Sequelize.STRING,
                    lis: Sequelize.STRING,
                    database_: Sequelize.NUMBER,
                    responsa: Sequelize.STRING,
                    codeletron: Sequelize.STRING,
                    impriconta: Sequelize.NUMBER,
                    tamanhomat: Sequelize.NUMBER,
                    ordemnf: Sequelize.NUMBER,
                    remessa: Sequelize.NUMBER,
                    lote: Sequelize.NUMBER,
                    ramalf: Sequelize.STRING,
                    conta2: Sequelize.STRING,
                    contatoout: Sequelize.STRING,
                    contatonf: Sequelize.STRING,
                    contatobol: Sequelize.STRING,
                    orides: Sequelize.NUMBER,
                    marca: Sequelize.NUMBER,
                    datai: Sequelize.DATE,
                    dataf: Sequelize.DATE,
                    prazo_pag: Sequelize.NUMBER,
                    dia_base: Sequelize.STRING,
                    tipo_pes: Sequelize.NUMBER,
                    registro: Sequelize.STRING,
                    valaut: Sequelize.NUMBER,
                    numtra: Sequelize.NUMBER,
                    usatiss: Sequelize.NUMBER,
                    usatissnew: Sequelize.NUMBER,
                    chklotehash: Sequelize.NUMBER,
                    gerarqnumtran: Sequelize.NUMBER,
                    cabecalho: Sequelize.NUMBER,
                    codconv: Sequelize.STRING,
                    guiaauto: Sequelize.NUMBER,
                    tipocr: Sequelize.NUMBER,
                    tipocs: Sequelize.NUMBER,
                    empcs_id: Sequelize.INTEGER,
                    empcr_id: Sequelize.INTEGER,
                    guiaautomanual: Sequelize.NUMBER,
                    verifmatric: Sequelize.NUMBER,
                    modulo11: Sequelize.NUMBER,
                    naoautoinc: Sequelize.NUMBER,
                    impest: Sequelize.NUMBER,
                    qtdchar: Sequelize.NUMBER,
                    chkcodconv: Sequelize.NUMBER,
                    chknumaut: Sequelize.NUMBER,
                    chkagrupa: Sequelize.NUMBER,
                    chkguia: Sequelize.NUMBER,
                    chkguia100: Sequelize.NUMBER,
                    chkcid: Sequelize.NUMBER,
                    chkversao: Sequelize.NUMBER,
                    naovenc: Sequelize.NUMBER,
                    agrupatiss: Sequelize.NUMBER,
                    qtdchar2: Sequelize.NUMBER,
                    qtdchar3: Sequelize.NUMBER,
                    condominio: Sequelize.NUMBER,
                    obsnf: Sequelize.STRING,
                    boletoemail: Sequelize.NUMBER,
                    im: Sequelize.STRING,
                    endcob: Sequelize.STRING,
                    repre: Sequelize.NUMBER,
                    emitenf: Sequelize.NUMBER,
                    chkguiaope: Sequelize.NUMBER,
                    financ: Sequelize.NUMBER,
                    chkseparafilme: Sequelize.NUMBER,
                    chkguia70: Sequelize.NUMBER,
                    codconvcon: Sequelize.STRING,
                    dia: Sequelize.STRING,
                    qtdcharguia: Sequelize.NUMBER,
                    qtdcharguia2: Sequelize.NUMBER,
                    qtdcharguia3: Sequelize.NUMBER,
                    exibmattiss: Sequelize.NUMBER,
                    chkguia50: Sequelize.NUMBER,
                    diasent: Sequelize.NUMBER,
                    usadiasent: Sequelize.NUMBER,
                    senhainter: Sequelize.STRING,
                    login: Sequelize.STRING,
                    gerainter: Sequelize.NUMBER,
                    todos_exa_urg: Sequelize.NUMBER,
                    tiss_ordem_alfa: Sequelize.NUMBER,
                    dtemissaoguia: Sequelize.NUMBER,
                    dtautguia: Sequelize.NUMBER,
                    chkguiaprinc: Sequelize.NUMBER,
                    depara: Sequelize.STRING,
                    pl_contas_id: Sequelize.INTEGER,
                    ccusto_id: Sequelize.INTEGER,
                    labap_id: Sequelize.INTEGER,
                    caminho_arqapoiado: Sequelize.STRING,
                    gerainter_codigoctrl: Sequelize.NUMBER,
                    exige_codigoctrl: Sequelize.NUMBER,
                    chkpronturg: Sequelize.NUMBER,
                    chkguiaout: Sequelize.NUMBER,
                    qtdout: Sequelize.NUMBER,
                    chknaoexeccomp: Sequelize.NUMBER,
                    postopermconv: Sequelize.STRING,
                    guiamatfilme: Sequelize.NUMBER,
                    cabrtfconv: Sequelize.TEXT,
                    rodrtfconv: Sequelize.TEXT,
                    fchrtfconv: Sequelize.TEXT,
                    exame0_cab: Sequelize.TEXT,
                    exame0_fch: Sequelize.TEXT,
                    exame0_rdp: Sequelize.TEXT,
                    cabeca_bmp: Sequelize.TEXT,
                    rodape_bmp: Sequelize.TEXT,
                    fundo_bmp: Sequelize.TEXT,
                    examema0_cab: Sequelize.TEXT,
                    examema0_fch: Sequelize.TEXT,
                    examema0_rdp: Sequelize.TEXT,
                    validadorunimed: Sequelize.NUMBER,
                    postob2b: Sequelize.CHAR,
                    qtdexamsg: Sequelize.NUMBER,
                    lotecon: Sequelize.NUMBER,
                    conffat_exige_depara3: Sequelize.NUMBER,
                    conffat_exige_cbos: Sequelize.NUMBER,
                    avisa_exa_cad_dias: Sequelize.NUMBER,
                    diasexaage_conv: Sequelize.NUMBER,
                    lotexml: Sequelize.NUMBER,
                    cmdunimed: Sequelize.TEXT,
                    retemperc: Sequelize.NUMBER,
                    retempercrps: Sequelize.NUMBER,
                    posto_id: Sequelize.INTEGER,
                    tiss_loginprest: Sequelize.INTEGER,
                    tiss_senhaprest: Sequelize.STRING,
                    usaorizon: Sequelize.NUMBER,
                    loginorizon: Sequelize.STRING,
                    senhaorizon: Sequelize.STRING,
                    enderecoorizon: Sequelize.STRING,
                    partorizon: Sequelize.NUMBER,
                    contato: Sequelize.STRING,
                    guia_tiss_logo_key: Sequelize.STRING,
                    guia_tiss_logo_url: Sequelize.STRING,
                    guia_tiss_logo_type: Sequelize.STRING,
                },
                {
                    sequelize,
                    modelName: 'Convenio',
                    tableName: 'convenio',
                    timestamps: false,
                }
            );
            return this;
        }

        static associate(models) {
            this.belongsTo(models.Envio, {
                foreignKey: 'envio_id',
                as: 'envio',
            });
            this.belongsTo(models.Entrega, {
                foreignKey: 'entrega_id',
                as: 'entrega',
            });

            this.belongsTo(models.Motina, {
                foreignKey: 'status',
                as: 'motina',
            });

            this.belongsTo(models.Empresa, {
                foreignKey: 'empcr_id',
                as: 'empresa_cr',
            });
            this.belongsTo(models.Empresa, {
                foreignKey: 'empcs_id',
                as: 'empresa_cs',
            });

            this.belongsTo(models.Posto, {
                foreignKey: 'posto_id',
                as: 'posto',
            });

            this.hasMany(models.Represac, {
                foreignKey: 'sacado_id',
                as: 'represac',
            });

            this.hasMany(models.ConvenioTiss, {
                foreignKey: 'convenio_id',
                as: 'convenio_tiss',
            });
            this.hasMany(models.ConvenioSus, {
                foreignKey: 'convenio_id',
                as: 'conveniosusexame',
            });
            this.hasMany(models.ConvenioLembrete, {
                foreignKey: 'convenio_id',
                as: 'conveniolembreteexame',
            });
            this.hasMany(models.ConvenioLoteFat, {
                foreignKey: 'convenio_id',
                as: 'conveniolotefat',
            });
            this.hasMany(models.Contato, {
                foreignKey: 'convenio_id',
                as: 'contatos',
            });

            this.hasMany(models.Plano, {
                foreignKey: 'convenio_id',
                as: 'plano',
            });
        }
    };
